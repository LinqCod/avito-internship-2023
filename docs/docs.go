// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Balin Maxim",
            "email": "linqcod@yandex.ru"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/segments": {
            "post": {
                "description": "create segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "segments"
                ],
                "summary": "create segment",
                "parameters": [
                    {
                        "description": "Create segment",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.CreateSegmentDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "segment created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.CreateSegmentResponse"
                        }
                    },
                    "400": {
                        "description": "error bad request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "error while inserting segment to db table",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/segments/{id}": {
            "delete": {
                "description": "delete segment by id",
                "tags": [
                    "segments"
                ],
                "summary": "delete segment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Segment slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "segment deleted successfully"
                    },
                    "500": {
                        "description": "error while deleting segment",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get users",
                "responses": {
                    "200": {
                        "description": "all users received successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.User"
                            }
                        }
                    },
                    "500": {
                        "description": "error while getting users",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            },
            "post": {
                "description": "create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "create user",
                "parameters": [
                    {
                        "description": "Create user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "user created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.CreateUserResponse"
                        }
                    },
                    "400": {
                        "description": "error bad request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "error while inserting user to db table",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user received successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.User"
                        }
                    },
                    "400": {
                        "description": "error bad request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "error while getting user",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/users/{id}/active": {
            "get": {
                "description": "get user active segments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "get active segments",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "segments received successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ActiveUserSegmentsDTO"
                        }
                    },
                    "400": {
                        "description": "error bad request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "error while getting users",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/users/{id}/changeSegments": {
            "post": {
                "description": "add and remove user segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "change user segments",
                "parameters": [
                    {
                        "description": "Change segments",
                        "name": "segmentsChanges",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ChangeUserSegmentsDTO"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "User id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "segments changed successfully"
                    },
                    "400": {
                        "description": "error bad request data",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    },
                    "500": {
                        "description": "error while changing segments",
                        "schema": {
                            "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_linqcod_avito-internship-2023_internal_model.ActiveSegment": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.ActiveUserSegmentsDTO": {
            "type": "object",
            "properties": {
                "segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_linqcod_avito-internship-2023_internal_model.ActiveSegment"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.ChangeUserSegmentsDTO": {
            "type": "object",
            "properties": {
                "segments_to_add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "segments_to_remove": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.CreateSegmentDTO": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.CreateSegmentResponse": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.CreateUserDTO": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.CreateUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.ErrorDTO": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_linqcod_avito-internship-2023_internal_model.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "User Segmentation API",
	Description:      "User segmentation service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
